#!/usr/bin/env python
PACKAGE = "drivetrain_node"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("drive_kP", double_t, 0, "Drivetrain kP value", 0, 0, 100)
gen.add("drive_kI", double_t, 0, "Drivetrain kI value", 0, 0, 100)
gen.add("drive_kD", double_t, 0, "Drivetrain kD value", 0, 0, 100)
gen.add("drive_kF", double_t, 0, "Drivetrain kF value", 0, 0, 2)
gen.add("drive_iZone", double_t, 0, "Drivetrain iZone value", 0, 0, 100)
gen.add("drive_maxIAccum", double_t, 0, "Drivetrain max I Accum value", 0, 0, 100)
gen.add("drive_closed_loop_ramp", double_t, 0, "Drivetrain closed loop ramp value", 0, 0, 100)
gen.add("drive_tuning_velocity_target", double_t, 0, "Drivetrain tuning velocity target value", 0, -5000, 5000)
gen.add("drive_kV", double_t, 0, "Drivetrain kV value", 0, 0, 100)
gen.add("drive_kA", double_t, 0, "Drivetrain kA value", 0, 0, 100)

drive_mode_enum = gen.enum([ gen.const("Normal", int_t, 0, "Driver joystick operated"),
                             gen.const("TuningVelocityPID", int_t, 1, "Velocity PID Tuning"),
                             gen.const("TuningkVkA", int_t, 2, "Velocity kV kA Tuning")],
                             "The mode to control the robot")

gen.add("drive_control_mode", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 2, edit_method=drive_mode_enum)

exit(gen.generate(PACKAGE, "drivetrain_node", "DriveTuning"))